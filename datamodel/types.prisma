# 人事

type Person {
  id: ID! @unique
  name: String!
  gender: String!
  birthday: DateTime!
}

type User {
  id: ID! @unique
  protocolId: String
  name: String!
  gender: String!
  position: String
  etnia: String!
  birthday: DateTime!
  academicBackground: String
  foreignLanguage: String
  politicalRole: String
  rank: String
  promotionDate: DateTime
  outRole: String
  innerRole: String
  chargeOf: String
  sendingEntity: String
  arrivingDate: DateTime
  leavingDate: DateTime
  fromEntity: String
  memo: String
  contact: Contact
  partyMembership: XPartyMembership
  documents: [XDocument!]!
}

# 文档

type Article {
  id: ID! @unique
  author: String!
  title: String!
  text: String
  isPublished: Boolean! @default(value: "false")
  format: ArticleFormat
  tags: [String!]
  publishDate: DateTime! @default(value: "2018-01-26")
}

type XDocument {
  id: ID! @unique
  type: String
  mark: String
  classification: String
  startDate: DateTime!
  title: String!
  text: String!
  fromEntity: Entity! @relation(name: "XDocumentFromEntity")
  sendingEntity: Entity! @relation(name: "XDocumentSendingEntity")
  toEntity: Entity! @relation(name: "XDocumentToEntity")
  copyEntity: Entity @relation(name: "XDocumentCopyEntity")
  attachment: String
  tags: String
  author: User!
}

type Entity {
  name: String!
  fullName: String!
  abbr: String!
  address: Address! @relation(name: "EntityAddress")
  avatar: String
}

# 活动

type XActivity {
  id: ID! @unique
  address: Address! @relation(name: "XActivityAddress")
  occurrenceDate: DateTime!
  content: String!
  applicant: User! @relation(name: "XActivityApplicantUser")
  participants: [User!]! @relation(name: "XActivityParticipantsUser")
  startTime: DateTime!
  endTime: DateTime!
  reporter: [User!]! @relation(name: "XActivityReporterUser")
  reportDate: DateTime!
  reportContent: String!
  instructor: [User!]! @relation(name: "XActivityInstructorUser")
  instructionDate: DateTime!
  instruction: String!
  priority: PriorityLevel!
}

# 党务
type XPartyMembership {
  id: ID! @unique
  name: String!
  preEnrollDate: DateTime!
  EnrollDate: DateTime!
  registerInDate: DateTime!
  registerOutDate: DateTime!
  membershipState: String!
  contact: Contact
  belongToEntity: XPartyEntity!
}

type XPartyEntity {
  name: String!
  fullName: String!
}

# 流程管理
type XProcedure {
  name: String!
  startDate: DateTime!
  deadline: DateTime
  percetage: Float
  previousProcedure: XProcedure @relation(name: "PreProcedure")
  nextProcedure: XProcedure @relation(name: "NextProcedure")
  users: [User!]!
  documents: [XDocument!]!
  entities: [Entity!]!
}

type XPromotionProcedure {
  previousRank: String!
  currentRank: String!
  promitionDate: DateTime!
  previousSalary: String!
  currentSalary: String!
  procedureState: XProcedure!
}

type XEvaluationProcedure {
  target: User! @relation(name: "XEvaluationTargetUser")
  positiveObservation: String
  negativeObservation: String
  expectation: String
  performanceLevel: String!
  proposal: String
  directSuperior: User! @relation(name: "XEvaluationDirectUser")
  headOfInstitution: User @relation(name: "XEvaluationHeadUser")
  procedureState: XProcedure!
}

type XDocumentProcedure {
  from: String!
  to: String!
  procedureState: XProcedure!
}

type XItemProcedure {
  previousPlace: String!
  currentPlace: String!
  devaluation: String!
  procedureState: XProcedure!
}

# 财务管理
type Item {
  name: String!
  brand: String!
  model: String!
  productionDate: DateTime
  overDate: DateTime
  description: String
  price: Float!
  mutationProcedure: XItemProcedure!
}

type Storage {
  storageName: String!
  guardName: User!
  items: [Item!]!
}

type XTransaction {
  id: ID! @unique
  name: String!
  place: String
  Date: DateTime!
  description: String
  applicant: String!
  item: Item
  quantity: Int
  total: String!
  type: TransactionType!
  tags: [String!]
}

# 通用信息
type Address {
  street: String!
  suite: String!
  area: String!
  city: String!
  state: String!
  country: String!
  zipcode: String
  geo: Location
}

type Location {
  latitude: Float!
  longitude: Float!
}

type Contact {
  homePhone: String!
  officePhone: String!
  cellPhone: String!
  email: String!
  wechat: String
  whatsapp: String
  github: String
  twitter: String
  instagram: String
  homepage: String
  avatar: String
}

type Vacation {
  startDate: DateTime!
  endDate: DateTime!
  vacationType: VacationType!
  routes: [String!]!
}
